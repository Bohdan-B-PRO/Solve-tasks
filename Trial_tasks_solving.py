# 1 Задача на раздиление строки

# print('a', 'b', 'c', sep='*')
# print('d', 'e', 'f', sep='**', end='')
# print('g', 'h', 'i', sep='+', end='%')
# print('j', 'k', 'l', sep='-', end='\n')
# print('m', 'n', 'o', sep='/', end='!')
# print('p', 'q', 'r', sep='1', end='%')
# print('s', 't', 'u', sep='&', end='\n')
# print('v', 'w', 'x', sep='%')
# print('y', 'z', sep='/', end='!')

# 2 Задача на раздиление строки

# sep = "*"
# a = "Раз"
# b = "Два"
# c = "Три"
#
# sep_1 = "##"
# a_1 = "Money often"
# b_1 = "costs"
# c_1 = "too much"
#
# sep_2 = "Python"
# num = 1
# num_2 = 2
# num_3 = 3
#
# print(a, b, c, sep= sep)
# print(a_1, b_1, c_1, sep= sep_1)
# print(num, num_2, num_3, sep= sep_2)


# print("Раз", "Два", "Три", sep= "*")
# print("Money often", "costs", "too much", sep= "##")
# print(1, 2, 3, sep= "Python")

# 3 Задача на раздиление строки

# s = "*"
# a = input()
# b = input()
# c = input()
#
# print(a, b, c, sep=s)

# 4

# Напишите программу вычисления значения функции f(a,b) = 3(a + b)**3 + 275b**2 − 127a − 41
# по введеным целым значениям a и b.
#
# Формат входных данных
# На вход программе подаётся два целых числа, каждое на отдельной строке. В первой строке — значение
# a, во второй строке — значение b.
#
# Формат выходных данных
# Программа должна вывести значение функции по введённым числам a и b.

# a = int(input())
# b = int(input())
#
# func = 3 * ((a + b)**3) + 275 * b**2 - 127 * a -41
#
# print(func)

# 5

# Напишите программу, которая считывает целое число, после чего на экран выводится следующее и предыдущее
# целое число с пояснительным текстом.
#
# Формат входных данных
# На вход программе подаётся целое число.
#
# Формат выходных данных
# Программа должна вывести текст согласно условию задачи.

# number = int(input())
# number_1 = number + 1
# number_2 = number - 1
#
# print("Следующее за числом", number, "число:", number_1)
# print("Для числа", number, "предыдущее число:", number_2)

# 6

# Напишите программу, которая считает стоимость трех компьютеров, состоящих из монитора, системного блока,
# клавиатуры и мыши.
#
# Формат входных данных
# На вход программе подаётся четыре целых числа, каждое на отдельной строке. В первой строке — стоимость
# монитора, во второй строке — стоимость системного блока, в третьей строке — стоимость клавиатуры и в
# четвертой строке — стоимость мыши.
#
# Формат выходных данных
# Программа должна вывести одно число – стоимость покупки (трех компьютеров).

# monitor = int(input())
# system_unit = int(input())
# keyboard = int(input())
# mouse_keyboard = int(input())
# purchase_amount_of_the_first_computer = monitor + system_unit + keyboard + mouse_keyboard
# purchase_amount_of_the_second_computer = monitor + system_unit + keyboard + mouse_keyboard
# purchase_amount_of_the_third_computer = monitor + system_unit + keyboard + mouse_keyboard
#
# print(purchase_amount_of_the_first_computer + purchase_amount_of_the_second_computer + purchase_amount_of_the_third_computer)
#
# or ВАРИАНТ 2. Но первый вернее т.к условее задачи посчитать суму 3-х компьютеров
# print(purchase_amount_of_the_first_computer + purchase_amount_of_the_first_computer + purchase_amount_of_the_first_computer)

# 7

# Напишите программу, в которой вычисляется сумма, разность и произведение двух целых чисел, введенных
# с клавиатуры.
#
# Формат входных данных
# На вход программе подаётся два целых числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести сумму, разность и произведение введённых чисел, каждое на отдельной строке.

# num_1 = int(input())
# num_2 = int(input())
#
# sum = num_1 + num_2
# difference = num_1 - num_2
# product_of_two_numbers = num_1 * num_2
#
# print(num_1, "+", num_2, "=", sum)
# print(num_1, "-", num_2, "=", difference)
# print(num_1, "*", num_2, "=", product_of_two_numbers)

# 8 Арифметической прогрессией называется последовательность чисел a1, a2, ... ,an,
# каждое из которых, начиная с a2, получается из предыдущего прибавлением к нему одного и того же
# постоянного числа d (разность прогрессии), то есть: an = an − 1 + d
# Если известен первый член прогрессии и её разность, то n-ый член арифметической прогрессии находится
# по формуле: an = a1 + d(n − 1)

# Входные данные
# На вход программе подаётся три целых числа: a1, d и n, каждое на отдельной строке.
#
# Выходные данные
# Программа должна вывести n-ый член арифметической прогрессии.

# a_1 = int(input())
# d = int(input())
# n = int(input())
#
# result = a_1 + d * (n - 1)
#
# print(result)

# 9 Напишите программу, которая считывает целое положительное число x и выводит на экран
# последовательность чисел: x, 2x, 3x, 4x и 5x, разделённых тремя черточками.
#
# Формат входных данных
# На вход программе подаётся целое положительное число.
#
# Формат выходных данных
# Программа должна вывести текст согласно условию задачи.


# x = int(input())
# a, b, c, d = x * 2, x * 3, x * 4, x * 5
# print(x, a, b, c, d, sep="---")

# 9 Геометрической прогрессией называется последовательность чисел b1, b2,…,bn, каждое из которых,
# начиная с b2, получается из предыдущего умножением на одно и то же постоянное число q
# (знаменатель прогрессии), то есть bn = bn − 1 ⋅ q Если известен первый член прогрессии и её знаменатель,
# то  n-ый член геометрической прогрессии находится по формуле bn = b1 ⋅ q**(n − 1)
#
# Входные данные
# На вход программе подаётся три целых числа: b1, q и n, каждое на отдельной строке.
#
# Выходные данные
# Программа должна вывести  n-ый член геометрической прогрессии.

# b_1 = int(input())
# q = int(input())
# n = int(input())
# b_n = b_1 * q**(n - 1)
#
# print(b_n)

# 10 Напишите программу, которая находит полное число метров по заданному числу сантиметров.
#
# Формат входных данных
# На вход программе подаётся натуральное число – количество сантиметров.
#
# Формат выходных данных
# Программа должна вывести одно число – полное число метров.

# centimetres = int(input())
# metres = centimetres // 100
#
# print(metres)

# 11 n школьников делят  k мандаринов поровну, неделящийся остаток остается в корзине. Сколько целых
# мандаринов достанется каждому школьнику? Сколько целых мандаринов останется в корзине?
#
# Формат входных данных
# На вход программе подаётся два целых числа: количество школьников и количество мандаринов, каждое на
# отдельной строке.
#
# Формат выходных данных
# Программа должна вывести два числа: количество мандаринов, которое достанется каждому школьнику,
# и количество мандаринов, которое останется в корзине, каждое на отдельной строке.

# schoolchildren = int(input())
# tangerines = int(input())
#
# print(tangerines // schoolchildren)
# print(tangerines % schoolchildren)

# 12 Безумный титан Танос собрал все 6 камней бесконечности и намеревается уничтожить половину населения
# Вселенной по щелчку пальцев. При этом если население Вселенной является нечетным числом, то титан
# проявит милосердие и округлит количество выживших в большую сторону. Помогите Мстителям подсчитать
# количество выживших.
#
# Формат входных данных
# На вход дается число целое n – население Вселенной.
#
# Формат выходных данных
# Программа должна вывести одно число – количество выживших.

# num = int(input())
# sum = (num + 1) // 2
#
# print(sum)

# 13 В купейном вагоне имеется  9 купе с четырьмя местами для пассажиров в каждом. Напишите программу,
# которая определяет номер купе, в котором находится место с заданным номером (нумерация мест сквозная,
# начинается с 1)

# Формат входных данных
# На вход программе подаётся целое число – место с заданным номером в вагоне.
#
# Формат выходных данных
# Программа должна вывести одно число – номер купе, в котором находится указаное место.

# num = int(input())
# print(-1 * (num // - 4))  # также можно записать print(-(num // - 4))

# 14 Напишите программу для пересчёта величины временного интервала, заданного в минутах, в величину,
# выраженную в часах и минутах.
#
# Формат входных данных
# На вход программе подаётся целое число – количество минут.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# minutes = int(input())
# hours = minutes // 60
# seconds = minutes % 60
#
# print(minutes, "мин", "-", "это", hours, "чвса", seconds, "минут")

# 15 Напишите программу, в которой рассчитывается сумма и произведение цифр положительного
# трёхзначного числа.
#
# Формат входных данных
# На вход программе подаётся положительное трёхзначное число.
#
# Формат выходных данных
# Программа должна вывести два числа с поясняющим текстом: сумма цифр и произведение цифр.

# num = int(input())
# num_1 = num // 100
# num_2 = num % 10
# num_3 = (num // 10) % 10
# sum_numbers = num_1 + num_2 + num_3
# product_of_numbers = num_1 * num_2 * num_3
#
# print("Сумма цифр =", sum_numbers)
# print('Произведение цифр =', product_of_numbers)

# 16 Дано трехзначное число abc, в котором все цифры различны. Напишите программу, которая выводит шесть
# чисел, образованных при перестановке цифр заданного числа.
#
# Формат входных данных
# На вход программе подаётся положительное трёхзначное целое число, все цифры которого различны.
#
# Формат выходных данных
# Программа должна вывести шесть чисел, образованных при перестановке цифр заданного числа в следующем
# порядке: abc, acb, bac, bca, cab, cba.

# numbers = int(input())
# a, b, c = numbers // 100, (numbers // 10) % 10, numbers % 10
#
# print(a, b, c, sep="")
# print(a, c, b, sep="")
# print(b, a, c, sep="")
# print(b, c, a, sep="")
# print(c, a, b, sep="")
# print(c, b, a, sep="")

# 17 Напишите программу для нахождения цифр четырёхзначного числа.
#
# Формат входных данных
# На вход программе подаётся положительное четырёхзначное целое число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# number = int(input())
# number_of_thousand = number // 1000
# number_of_a_hundred = (number // 100) % 10
# number_of_tens = (number // 10) % 10
# number_of_units = number % 10
#
# print("Цифра в позиции тысяч равна", number_of_thousand)
# print("Цифра в позиции сотен равна", number_of_a_hundred)
# print("Цифра в позиции десятков равна", number_of_tens)
# print("Цифра в позиции единиц равна", number_of_units)

# 18 Напишите программу, которая выводит прямоугольник, по периметру состоящий из звездочек (*).
# Примечание. Высота и ширина прямоугольника равны 4 и 17 звёздочкам соответственно

# 1 Вариант

# a = 17 * "*"
#
# print(a)
# print('*               *')
# print('*               *')
# print(a)
#
# # 2 Вариант
#
# print('*****************')
# print('*               *')
# print('*               *')
# print('*****************')


# 19 Напишите программу, которая считывает два целых числа a и b и выводит на экран квадрат суммы
# (a + b)**2 и сумму квадратов a**2 + b**2 этих чисел.
#
# Формат входных данных
# На вход программе подаётся два целых числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием.

# a = int(input())
# b = int(input())
# square_of_sum = (a + b)**2
# sum_of_squares = a**2 + b**2
#
# print("Квадрат суммы", a, "и", b, "равен", square_of_sum)
# print("Сумма квадратов", a, "и", b, "равна", sum_of_squares)

# 20 Как известно, целые числа в языке Python не имеют ограничений, которые встречаются в других
# языках программирования. Напишите программу, которая считывает четыре целых положительных числа
# a,b,c и d и выводит на экран значение выражения a**b + c**d.
#
# Формат входных данных
# На вход программе подаётся четыре целых положительных числа a,b,c и d, каждое на отдельной строке
# в указанном порядке.
#
# Формат выходных данных
# Программа должна вывести значение a**b + c**d.

# a = int(input())
# b = int(input())
# c = int(input())
# d = int(input())
# sun = a**b + c**d
#
# print(sun)

# 21 Напишите программу, которая считывает целое положительное число n, n ∈[1;9] и выводит значение
# числа n + nn + nnn.
#
# Формат входных данных
# На вход программе подаётся одно целое положительное число n,n∈[1;9].
#
# Формат выходных данных
# Программа должна вывести число n + nn + nnn.
#
# Примечание. Для первого теста 1+11+111=123.

# n = int(input())
# nn = n * 10 + n
# nnn = n * 100 + n * 10 + n
# print(n + nn + nnn)

# 22 При регистрации на сайтах требуется вводить пароль дважды. Это сделано для безопасности, поскольку
# такой подход уменьшает возможность неверного ввода пароля.
#
# Напишите программу, которая сравнивает пароль и его подтверждение. Если они совпадают, то программа
# выводит: «Пароль принят», иначе: «Пароль не принят».
#
# Формат входных данных
# На вход программе подаются две строки.
#
# Формат выходных данных
# Программа должна вывести одну строку в соответствии с условием задачи.

# password_1 = str(input())
# password_2 = str(input())

# password_1 = input()
# password_2 = input()
#
# if password_1 == password_2:
#     print("Пароль принят")
# else:
#     print("Пароль не принят")

#  23 Напишите программу, которая определяет, является число четным или нечетным.
#
# Формат входных данных
# На вход программе подаётся одно целое число.
#
# Формат выходных данных
# Программа должна вывести «Четное», если число четное, и «Нечетное» — если число нечетное.

# num = int(input())
#
# if num % 2 == 0:
#     print("Четное")
# else:
#     print("Нечетное")

# 24 Напишите программу, которая проверяет, что для заданного четырехзначного числа выполняется
# следующее соотношение: сумма первой и последней цифр равна разности второй и третьей цифр.
#
# Формат входных данных
# На вход программе подаётся одно целое положительное четырёхзначное число.
#
# Формат выходных данных
# Программа должна вывести «ДА», если соотношение выполняется, и «НЕТ» — если не выполняется.

# number = int(input())
# sum_numbers = number // 1000 + number % 10
# different_numbers = number // 100 % 10 - number // 10 % 10
#
# if sum_numbers == different_numbers:
#     print("Да")
# else:
#     print("Нет")

# 25 Напишите программу, которая определяет, разрешен пользователю доступ к интернет-ресурсу или нет.
#
# Формат входных данных
# На вход программе подаётся целое число — возраст пользователя.
#
# Формат выходных данных
# Программа должна вывести текст «Доступ разрешен» если возраст не менее 18, и «Доступ запрещен» в
# противном случае.

# age = int(input())
#
# if age >= 18:
#     print("Доступ разрешен")
# else:
#     print("Доступ запрещен")

# 26 Напишите программу, которая определяет, являются ли три заданных числа (в указанном порядке)
# последовательными членами арифметической прогрессии.
#
# Формат входных данных
# На вход программе подаются три числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести «YES» или «NO» (без кавычек) в соответствии с условием задачи.

# a, b, c = int(input()), int(input()), int(input())
# print('YES' if (c - b) == (b - a) and (a <= b <= c or a > b > c) else 'NO')

# 27 Напишите программу, которая определяет наименьшее из двух чисел.
#
# Формат входных данных
# На вход программе подаётся два различных целых числа.
#
# Формат выходных данных
# Программа должна вывести наименьшее из двух чисел.

# num_1 = int(input())
# num_2 = int(input())
#
# if num_1 < num_2:
#     print(num_1)
# else:
#     print(num_2)

# 28 Напишите программу, которая определяет наименьшее из четырёх чисел.
#
# Формат входных данных
# На вход программе подаётся четыре целых числа.
#
# Формат выходных данных
# Программа должна вывести наименьшее из четырёх чисел.

# a, b, c, d = int(input()), int(input()), int(input()), int(input())
# print(min(a, b, c, d))

# 29 Напишите программу, которая по введённому возрасту пользователя сообщает, к какой возрастной группе
# он относится:
#
# до 13 включительно – детство;
# от 14 до 24 – молодость;
# от 25 до 59 – зрелость;
# от 60 – старость.

# Формат входных данных
# На вход программе подаётся одно целое число – возраст пользователя.
#
# Формат выходных данных
# Программа должна вывести название возрастной группы.

# age = int(input())
#
# if age <= 13:
#     print("детство")
# if 14 <= age <= 24:
#     print("молодость")
# if 25 <= age <= 59:
#     print("зрелость")
# if age >= 60:
#     print("старость")

# 30 Напишите программу, которая считывает три числа и подсчитывает сумму только положительных чисел.
#
# Формат входных данных
# На вход программе подаются три целых числа.
#
# Формат выходных данных
# Программа должна вывести одно число – сумму положительных чисел.
#
# Примечание. Если положительных чисел нет, то следует вывести 0.

# num_one, num_two, num_three = int(input()), int(input()), int(input())
# sum = 0
#
# if num_one > 0:
#     sum += num_one
# if num_two > 0:
#     sum += num_two
# if num_three > 0:
#     sum += num_three
# print(sum)


# 31 Какое значение будет выведено на экран после выполнения следующей программы, если с клавиатуры
# введено число 7? Задача была на смекалку но я её добавил
# a = int(input())
# if a >= 2 and a <= 17:
#     b = 3
#     p = a * a + b * b
# else:
#     b = 5
# p = (a + b) * (a + b)
# print(p)

# Напишите программу, которая определяет, является ли заданное натуральное число трёхзначным.


# num = int(input())
# if 100 <= num <= 999:     # num >= 100 and num <= 999
#     print('Число является трёхзначным')
# else:
#     print('Число не является трёхзначным')


# 32 Напишите программу, которая принимает целое число x и определяет, принадлежит ли данное число
# указанному промежутку.
#
# Формат входных данных
# На вход программе подаётся целое число x.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# x = int(input())
# if x > -1 and x < 17:
#     print(f"{x} Принадлежит")
# else:
#     print(f"{x} Не принадлежит")


# 33 Напишите программу, которая принимает целое число x и определяет, принадлежит ли данное
# число указанным промежуткам.
#
# Формат входных данных
# На вход программе подаётся целое число x.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# x = int(input())
# if x <= -3 and x >= 7:
#     print(f"{x} Принадлежит")
# else:
#     print(f"{x} Не принадлежит")


# 34 Напишите программу, которая принимает целое число x и определяет, принадлежит ли данное
# число указанным промежуткам.
#
# Формат входных данных
# На вход программе подаётся целое число x.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# x = int(input())
# if (x >= -30 and x  < -2) or (x >= 7 and x < 25):
#     print("Принадлежит")
# else:
#     print("Не принадлежит")


# 35 Назовем число красивым, если оно является четырехзначным и делится нацело
# на 7 или на 17. Напишите программу, определяющую, является ли введённое число
# красивым.Программа должна вывести «YES», если число является красивым, или «NO»
# в противном случае.
#
# Формат входных данных
# На вход программе подаётся натуральное число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# num = int(input())
#
# if 999 < num < 10000:
#     if num % 7 == 0 or num % 17 == 0:
#         print("YES")
#     else:
#         print("NO")
# else:
#     print("NO")


# 36 Напишите программу, которая принимает три положительных числа и определяет,
# существует ли невырожденный треугольник с такими сторонами.
#
# Формат входных данных
# На вход программе подаётся три положительных целых числа.
#
# Формат выходных данных
# Программа должна вывести «YES» или «NO» в соответствии с условием задачи.


# a = int(input())
# b = int(input())
# c = int(input())
# if (a < (b + c)) and (b < (a + c)) and (c < (a + b)):
#     print("YES")
# else:
#     print("NO")


# 37 Напишите программу, которая определяет, является ли год с данным номером
# високосным. Если год является високосным, то выведите «YES», иначе выведите «NO».
#
# Год является високосным, если его номер кратен 4, но не кратен 100, или если он
# кратен 400.
#
# Формат входных данных
# На вход программе подаётся натуральное число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# year = int(input())
#
# # Делится на 4 без остатка но на 100 с остатком
# # или делится на 400 без остатка
# if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
#     print('YES')
# else:
#     print('NO')


# 38 Даны две различные клетки шахматной доски. Напишите программу, которая
# определяет, может ли ладья попасть с первой клетки на вторую одним ходом.
# Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца
# и номер строки сначала для первой клетки, потом для второй клетки. Программа должна
# вывести «YES», если из первой клетки ходом ладьи можно попасть во вторую, или «NO»
# в противном случае.
#
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# a1, a2, b1, b2 = int(input()), int(input()), int(input()), int(input())
#
# if a1 == b1 or a2 == b2:
#     print("YES")
# else:
#     print("NO")


# 39 Даны две различные клетки шахматной доски. Напишите программу,  которая
# определяет, может ли король попасть с первой клетки на вторую одним ходом.
# Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер
# столбца и номер строки сначала для первой клетки, потом для второй клетки.
# Программа должна вывести «YES», если из первой клетки ходом короля можно попасть
# во вторую, или «NO» в противном случае.
#
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# x1 = int(input())
# y1 = int(input())
# x2 = int(input())
# y2 = int(input())
# x = x2 - x1  # разность координат по оси x
# y = y2 - y1  # разность координат по оси y
#
# # Так как король может ходить во все направления, но только на одну клетку, нужно сделать проверку: отличается ли конечная позиция от начальной на 1
# if -1 <= x <= 1 and -1 <= y <= 1:
#     print('YES')
# else:
#     print('NO')


# 40 Зум бросил вызов Флэшу и предложил ему честный поединок в виде гонки вокруг магнетара.
# В случае проигрыша эта нейтронная звезда зарядится и уничтожит мир, поэтому Флэш решил не
# рисковать без причины, и узнать у своего друга Циско Рамона есть ли смысл принимать вызов.
# Циско получил данные, что скорость Зума равна n, а скорость Флэша равна k.
#
# Напишите программу, которая должна вывести ответ Циско на вопрос Флэша.
#
# Формат входных данных
# На вход программе подаётся два целых числа n и k, скорость Зума и Флэша.
#
# Формат выходных данных
# Если Зум быстрее Флэша нужно вывести «NO», если Флэш быстрее Зума нужно вывести «YES»,
# если их скорости равны нужно вывести "Don't know"

# n, k = int(input()), int(input())
#
# if n > k:
#     print("NO")
# elif k > n:
#     print("YES")
# elif n == k:
#     print("Don't know")


# 41 Напишите программу, которая принимает три положительных числа и определяет вид
# треугольника, длины сторон которого равны введенным числам.
#
# Формат входных данных
# На вход программе подаются три числа – длины сторон существующего треугольника.
#
# Формат выходных данных
# Программа должна вывести на экран текст – вид треугольника («Равносторонний»,
# «Равнобедренный» или «Разносторонний»).

# a, b, c = int(input()), int(input()), int(input())
#
# if a == b == c:
#     print("Равносторонний")
# elif a == b != c or a != b == c or a == c != b:
#     print("Равнобедренный")
# elif a != b != c:
#     print("Разносторонний")


# 42 Даны три различных целых числа. Напишите программу, которая находит среднее по
# величине число.
#
# Формат входных данных
# На вход программе подаётся три различных целых числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести среднее число.

# num_1, num_2, num_3 = int(input()), int(input()), int(input())
#
# if num_1 < num_2 < num_3 or num_3 < num_2 < num_1:
#     print(num_2)
# elif num_1 < num_3 < num_2 or num_2 < num_3 < num_1:
#     print(num_3)
# elif num_2 < num_1 < num_3 or num_3 < num_1 < num_2:
#     print(num_1)


# 43 Дан порядковый номер месяца (1, 2, …, 12). Напишите программу, которая выводит на
# экран количество дней в этом месяце. Принять, что год является невисокосным.
#
# Примечание. Постарайтесь написать программу так, чтобы в ней было не более трех
# условий.
#
# Формат входных данных
# На вход программе подаётся одно целое число – порядковый номер месяца.
#
# Формат выходных данных
# Программа должна вывести количество дней в этом месяце.

# month = int(input())
#
# if month == 2:
#     print("29")
# elif month in [1, 3, 5, 7, 9, 11]:
#     print("31")
# else:
#     print("30")


# 44 Известен вес боксера-любителя (целое число). Известно, что вес таков, что боксер
# может быть отнесён к одной из трех весовых категорий:
#
# Легкий вес – до 60 кг;
# Первый полусредний вес – до 64 кг;
# Полусредний вес – до 69 кг.
# Напишите программу, определяющую, в какой категории будет выступать данный боксер.
#
# Формат входных данных
# На вход программе подаётся одно целое число.
#
# Формат выходных данных
# Программа должна вывести текст – название весовой категории.

# a = int(input())
#
# if a < 60:
#     print("Легкий вес")
# elif a < 64:
#     print("Первый полусредний вес")
# elif a < 69:
#     print("Полусредний вес")


# 45 Напишите программу, которая считывает с клавиатуры два целых числа и строку.
# Если эта строка является обозначением одной из четырёх математических операций
# (+, -, *, /), то выведите результат применения этой операции к введённым ранее
# числам, в противном случае выведите «Неверная операция». Если пользователь захочет
# поделить на ноль, выведите текст «На ноль делить нельзя!».
#
# Формат входных данных
# На вход программе подаются два целых числа, каждое на отдельной строке, и строка.
#
# Формат выходных данных
# Программа должна вывести результат применения операции к введенным числам или
# соответствующий текст, если операция неверная либо если происходит деление на ноль.

# num_1, num_2, s = int(input()), int(input()), input()
#
# if s == "+":
#     print(num_1 + num_2)
# elif s == "-":
#     print(num_1 - num_2)
# elif s == "*":
#     print(num_1 * num_2)
# elif s == "/":
#     if num_2 == 0:
#         print("На ноль делить нельзя!")
#     else:
#         print(num_1 / num_2)
# else:
#     print("Неверная операция")


# 46 Красный, синий и желтый называются основными цветами, потому что их нельзя
# получить путем смешения других цветов. При смешивании двух основных цветов
# получается вторичный цвет:
#
# если смешать красный и синий, то получится фиолетовый;
# если смешать красный и желтый, то получится оранжевый;
# если смешать синий и желтый, то получится зеленый.

# Напишите программу, которая считывает названия двух основных цветов для
# смешивания. Если пользователь вводит что-нибудь помимо названий «красный»,
# «синий» или «желтый», то программа должна вывести сообщение об ошибке. В противном
# случае программа должна вывести название вторичного цвета, который получится в
# результате.
#
# Формат входных данных
# На вход программе подаются две строки, каждая на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести полученный цвет смешения либо сообщение «ошибка цвета»,
# если введён был не цвет.
#
# Примечание. Если смешать красный и красный, то получится красный и т.д.

# x, y = input(), input()
#
# if x == "красный" and y == "синий" or x == "синий" and y == "красный":
#     print("фиолетовый")
# elif x == "красный" and y == "красный":
#     print("красный")
# elif x == "красный" and y == "желтый" or x == "желтый" and y == "красный":
#     print("оранжевый")
# elif x == "желтый" and y == "желтый":
#     print("желтый")
# elif x == "синий" and y == "желтый" or x == "желтый" and y == "синий":
#     print("зеленый")
# elif x == "синий" and y == "синий":
#     print("синий")
# else:
#     print("ошибка цвета")


# 47 На колесе рулетки карманы пронумерованы от 0 до 36. Ниже приведены цвета карманов:
#
# карман 0 зеленый;
# для карманов с 1 по 10 карманы с нечетным номером имеют красный цвет, карманы
# с четным номером – черный;
# для карманов с 11 по 18 карманы с нечетным номером имеют черный цвет, карманы
# с четным номером – красный;
# для карманов с 19 по 28 карманы с нечетным номером имеют красный цвет, карманы
# с четным номером – черный;
# для карманов с 29 по 36 карманы с нечетным номером имеют черный цвет, карманы
# с четным номером – красный.

# Напишите программу, которая считывает номер кармана и показывает, является
# ли этот карман зеленым, красным или черным. Программа должна вывести сообщение
# об ошибке,
# если пользователь вводит число, которое лежит вне диапазона от 0 до 36.
#
# Формат входных данных
# На вход программе подаётся одно целое число.
#
# Формат выходных данных
# Программа должна вывести цвет кармана либо сообщение «ошибка ввода», если
# введённое число лежит вне диапазона от 0 до 36.

# x = int(input())
#
# if x < 0 or x > 36:
#     print("ошибка ввода")
# elif x == 0:
#     print("зеленый")
# elif 1 <= x <= 10:
#     if x % 2 == 0:
#         print("черный")
#     else:
#         print("красный")
# elif 11 <= x <= 18:
#     if x % 2 == 0:
#         print("красный")
#     else:
#         print("черный")
# elif 19 <= x <= 28:
#     if x % 2 == 0:
#         print("черный")
#     else:
#         print("красный")
# elif 29 <= x <= 36:
#     if x % 2 == 0:
#         print("красный")
#     else:
#         print("черный")


# 48 На числовой прямой даны два отрезка: [a1; b1] и [a2; b2].
# Напишите программу, которая находит их пересечение.
#
# Пересечением двух отрезков может быть:
# отрезок;
# точка;
# пустое множество.

# Формат входных данных
# На вход программе подаются 4 целых числа a1, b1, a2, b2, каждое на
# отдельной строке. Гарантируется, что a1 < b1 и a2 < b2.
#
# Формат выходных данных
# Программа должна вывести на экран границы отрезка, являющегося пересечением,
# либо общую точку, либо текст «пустое множество».

# a1 = int(input())
# b1 = int(input())
# a2 = int(input())
# b2 = int(input())
#
# if a2 > b1 or a1 > b2:  # отсекаем отсутствие пересечений и общей точки
#     print('пустое множество')
# elif a1 == b2:  # первое условие общей точки
#     print(a1)
# elif a2 == b1:  # второе условие общей точки
#     print(a2)
# else:  # осталось найти только пересечение
#     if a1 > a2:  # получаем первую точку пересечения путем отсечения лишней точки
#         a2 = a1
#     if b1 < b2:  # получаем вторую точку пересечения
#         b2 = b1
#     print(a2, b2)


# 49 Напишите программу, которая определяет, оканчивается ли год с данным номером на
# два нуля. Если год оканчивается, то выведите «YES», иначе выведите «NO».
#
# Формат входных данных
# На вход программе подаётся натуральное число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# year = int(input())
# x = year % 10
# y = year % 100 // 10
# if x == 0 and y == 0:
#     print("YES")
# else:
#     print("NO")


# 50 Заданы две клетки шахматной доски. Напишите программу, которая определяет имеют
# ли указанные клетки один цвет или нет. Если они покрашены в один цвет, то выведите
# слово «YES», а если в разные цвета — то «NO».
#
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8 каждое, задающие номер столбца и
# номер строки сначала для первой клетки, потом для второй клетки.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# a, b, a1, b1 = int(input()), int(input()), int(input()), int(input())
#
# if (a + b + a1 + b1) % 2 == 0:
#     print("YES")
# else:
#     print("NO")


# 51 Girls only Футбольная команда набирает девочек от 10 до 15 лет включительно.
# Напишите программу, которая запрашивает возраст и пол претендента, используя
# обозначение пола буквы m (от male – мужчина) и f (от female – женщина) и определяет
# подходит ли претендент для вступления в команду или нет. Если претендент подходит,
# то выведите «YES», иначе выведите «NO».

# Формат входных данных
# На вход программе подаётся натуральное число – возраст претендента и буква
# обозначающая пол m (мужчина) или f (женщина).

# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# age, gender = int(input()), input()
#
# if 10 <= age <= 15 and gender == "f":
#     print("YES")
# else:
#     print("NO")


# 52 Напишите программу, которая считывает целое число и выводит соответствующую ему
# римскую цифру. Если число находится вне диапазона 1-10, то программа должна вывести
# текст «ошибка».
#
# В таблице приведены римские цифры для чисел от 1 до 10.

# Формат входных данных
# На вход программе подаётся целое число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# n, roman_numbers = int(input()), ['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X']
# print(roman_numbers[n-1] if 1 <= n <= 10 else 'ошибка')


# 53 Напишите программу, которая принимает на вход число и в зависимости от условий
# выводит текст «YES», либо «NO».
#
# Условия:
#
# если число нечётное, то вывести «YES»;
# если число чётное в диапазоне от 2 до 5 (включительно), то вывести «NO»;
# если число чётное в диапазоне от 6 до 20 (включительно), то вывести «YES»;
# если число чётное и больше 20, то вывести «NO».

# Формат входных данных
# На вход программе подаётся натуральное число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
# n = int(input())

# if n % 2 != 0:
#     print("YES")
# elif n % 2 == 0 and 2 <= n <= 5:
#     print("NO")
# elif n % 2 == 0 and 6 <= n <= 20:
#     print("YES")
# elif n % 2 == 0 and n > 20:
#     print("NO")


# 53 Даны две различные клетки шахматной доски. Напишите программу, которая
# определяет, может ли слон попасть с первой клетки на вторую одним ходом. Программа
# получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер
# строки сначала для первой клетки, потом для второй клетки. Программа должна вывести
# «YES», если из первой клетки ходом слона можно попасть во вторую или «NO» в противном
# случае.
#
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# Примечание. Шахматный слон ходит по диагоналям.
# x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())

# if (x1 - y1 == x2 - y2) or (x1 + y1 == x2 + y2):
#     print("YES")
# else:
#     print("NO")


# 54 Даны две различные клетки шахматной доски. Напишите программу,  которая
# определяет, может ли конь попасть с первой клетки на вторую одним ходом. Программа
# получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер
# строки сначала для первой клетки, потом для второй клетки. Программа должна вывести
# «YES», если из первой клетки ходом коня можно попасть во вторую или «NO» в
# противном случае.
#
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# Примечание. Шахматный конь ходит буквой «Г».
# x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
# if (x1 - x2) ** 2 + (y1 - y2) ** 2 == 5:
#     print("YES")
# else:
#     print("NO")


# 55 Даны две различные клетки шахматной доски. Напишите программу,  которая
# определяет, может ли ферзь попасть с первой клетки на вторую одним ходом.
# Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца
# и номер строки сначала для первой клетки, потом для второй клетки. Программа должна
# вывести «YES», если из первой клетки ходом ферзя можно попасть во вторую или «NO»
# в противном случае.
#
# Формат входных данных
# На вход программе подаётся четыре числа от 1 до 8.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.
#
# Примечание. Шахматный ферзь ходит по диагонали, горизонтали или вертикали.
# x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
#
# if abs(x1 - x2) == abs(y1 - y2) or x1 == x2 or y1 == y2:
#     print("YES")
# else:
#     print("NO")


# 56 Напишите программу, которая считывает длины двух катетов в
# прямоугольном треугольнике и выводит его площадь.

# Формат входных данных
# На вход программе подаётся два числа с плавающей точкой – длины катетов,
# каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести одно число – площадь треугольника.

# a = float(input())
# b = float(input())
# sum = 0.5 * a * b
# print(sum)


# 57 Две старушки идут навстречу друг другу с постоянными скоростями V1 и
# V2 км/ч. Определите, через какое время старушки встретятся, если
# расстояние между ними равно Sкм.

# Формат входных данных
# На вход программе подаются три числа с плавающей точкой S, V1, V2,
# каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести одно число в соответствии с условием задачи.
#
# Примечание. Это очень быстрые старушки.

# s = float(input())
# v_1 = float(input())
# v_2 = float(input())
# print(s / (v_1 + v_2))


# 58 Напишите программу, которая считывает с клавиатуры одно число и
# выводит обратное ему. Если при этом введённое с клавиатуры число – ноль,
# то вывести «Обратного числа не существует» (без кавычек).

# Формат входных данных
# На вход программе подается одно действительное число.
#
# Формат выходных данных
# Программа должна вывести действительное число обратное данному, либо
# текст в соответствии с условием задачи.

# num = float(input())
# if num == 0:
#     print("Обратного числа не существует")
# else:
#     print((num ** -1) / 1)


# 59 У известного американского писателя Рэя Бредбери есть роман «451
# градус по Фаренгейту». Напишите программу, которая определяет, какой
# температуре по шкале Цельсия соответствует указанное значение по шкале
# Фаренгейта.
#
# Используйте формулу для перевода: C = 5/9 * (F − 32).
#
# Формат входных данных
# На вход программе подаётся вещественное число градусов по шкале
# Фаренгейта.
#
# Формат выходных данных
# Программа должна вывести число градусов по шкале Цельсия.

# f = float(input())
# print(5 / 9 * (f - 32))


# 60 На вход программе подается число n – количество собачьих лет.
# Напишите программу, которая вычисляет возраст собаки в человеческих
# годах.
#
# Формат входных данных
# На вход программе подаётся натуральное число – количество собачьих лет.
#
# Формат выходных данных
# Программа должна вывести возраст собаки в человеческих годах.
#
# Примечание. В течение первых двух лет собачий год равен
# 10.5 человеческим годам. После этого каждый год собаки равен 4
# человеческим годам.

# dog_age = float(input())
# if 1 <= dog_age <= 2:
#     print(dog_age * 10.5)
# else:
#     print(10.5 * 2 + (dog_age - 2) * 4)


# 61 Дано положительное действительное число. Выведите его первую цифру
# после десятичной точки.
#
# Формат входных данных
# На вход программе подается положительное действительное число.
#
# Формат выходных данных
# Программа должна вывести цифру в соответствии с условием задачи.

# num = float(input())
# print((num * 10) % 10)


# 62 Дано положительное действительное число. Выведите его дробную часть.
#
# Формат входных данных
# На вход программе подается положительное действительное число.
#
# Формат выходных данных
# Программа должна вывести дробную часть числа в соответствии с условием
# задачи.

# x = float(input())
# print(x - int(x))


# 63 Напишите программу, которая находит наименьшее и наибольшее из пяти
# чисел.
#
# Формат входных данных
# На вход программе подается пять целых чисел, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести наименьшее и наибольшее число с поясняющей
# надписью.

# num_1, num_2, num_3, num_4, num_5 = int(input()), int(input()), int(input()), int(input()), int(input())
# minimum = min(num_1, num_2, num_3, num_4, num_5)
# maximum = max(num_1, num_2, num_3, num_4, num_5)
# print("Наименьшее число =", minimum)
# print("Наибольшее число =", maximum)


# 64 Напишите программу, которая упорядочивает три числа от большего к
# меньшему.
#
# Формат входных данных
# На вход программе подается три целых числа, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести три числа, каждое на отдельной строке,
# упорядоченных от большего к меньшему.

# a, b, c = int(input()), int(input()), int(input())
# midl = a + b + c - min(a, b, c) - max(a, b, c)
# print(max(a, b, c))
# print(midl)
# print(min(a, b, c))


# 65 Назовем число интересным, если в нем разность максимальной и
# минимальной цифры равняется средней по величине цифре. Напишите
# программу, которая определяет интересное число или нет. Если число
# интересное, следует вывести – «Число интересное» иначе «Число
# неинтересное».
#
# Формат входных данных
# На вход программе подается целое трехзначное число.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# num = float(input())
# firs_number = num // 100
# second_number = num // 100 % 10
# third_number = num % 10
# if firs_number + second_number + third_number == 2 * max(firs_number, second_number, third_number):
#     print("Число интересное")
# else:
#     print("Число неинтересное")


# 66 Абсолютная сумма.
# Даны пять чисел  a1, a2, a3, a4, a5. Напишите программу, которая
# вычисляет сумму их модулей
# |a1| + |a2| + |a3| + |a4| + |a5|.
#
# Формат входных данных
# На вход программе подается пять действительных чисел a1, a2, a3, a4, a5,
# каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести одно число – сумму модулей введённых чисел.

# a1 = abs(float(input()))
# a2 = abs(float(input()))
# a3 = abs(float(input()))
# a4 = abs(float(input()))
# a5 = abs(float(input()))
# print(a1 + a2 + a3 + a4 + a5)


# 67 Прогуливаясь по Манхэттену, вы не можете попасть из точки А в точку Б
# по кратчайшему пути. Если только вы не умеете проходить сквозь стены,
# вам обязательно придется идти вдоль его параллельно-перпендикулярных
# улиц.На плоскости манхэттенское расстояние между двумя точками (p1; p2)
# и (q1; q2) определяется так |p1 − q1| + |p2 − q2|. Напишите программу
# определяющую манхэттенское расстояние между двумя точками, координаты
# которых заданы.

# Формат входных данных
# На вход программе подается четыре целых числа, каждое на отдельной
# строке – p1, p2, q1, q2.
#
# Формат выходных данных
# Программа должна вывести одно число – манхэттенское расстояние.

# p1 = int(input())
# p2 = int(input())
# q1 = int(input())
# q2 = int(input())
# print(abs(p1 - q1) + abs(p2 - q2))


# 68 Напишите программу, которая считывает с клавиатуры название
# футбольной команды и выводит фразу:
#
# «Футбольная команда [введённая строка] имеет длину [длина введённой
# строки] символов».
#
# Формат входных данных
# На вход программе подаётся строка – название футбольной команды.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# team = input()
# team_length = len(team)
# print(f"Футбольная команда {team} имеет длину {team_length} символов")


# 69 Даны названия трех городов. Напишите программу, которая определяет
# самое короткое и самое длинное название города.
#
# Формат входных данных
# На вход программе подаётся названия трех городов, каждое на отдельной
# строке.
#
# Формат выходных данных
# Программа должна вывести самое короткое и длинное название города,
# каждое на отдельной строке.
#
# Примечание. Гарантируется, что длины названий всех трех городов
# различны.

# city_one = input()
# city_two = input()
# city_free = input()
#
# if min(len(city_one), len(city_two), len(city_free)) == len(city_one):
#     print(city_one)
# elif min(len(city_one), len(city_two), len(city_free)) == len(city_two):
#     print(city_two)
# else:
#     print(city_free)
# if max(len(city_one), len(city_two), len(city_free)) == len(city_one):
#     print(city_one)
# elif max(len(city_one), len(city_two), len(city_free)) == len(city_two):
#     print(city_two)
# else:
#     print(city_free)


# 70 Вводятся 3 строки в случайном порядке. Напишите программу, которая
# выясняет можно ли из длин этих строк построить возрастающую
# арифметическую прогрессию.
#
# Формат входных данных
# На вход программе подаются три строки, каждая на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести строку «YES», если из длин введенных слов
# можно построить арифметическую прогрессию, «NO» в ином случае.

# word_one = len(input())
# word_two = len(input())
# word_free = len(input())
#
# if word_one + word_two + word_free == (min(word_one, word_two, word_free) + max(word_one, word_two, word_free)) / 2 * 3:
#     print("YES")
# else:
#     print("NO")


# 71 Напишите программу, которая считывает одну строку, после чего
# выводит «YES», если в введенной строке есть подстрока «синий» и «NO» в
# противном случае.
#
# Формат входных данных
# На вход программе подается одна строка.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# sentences = input()
# if 'синий' in sentences:
#     print("YES")
# else:
#     print("NO")


# 72 Напишите программу, которая считывает одну строку, после чего
# выводит «YES», если в введённой строке есть подстрока «суббота» или
# «воскресенье», и «NO» в противном случае.
#
# Формат входных данных
# На вход программе подается одна строка.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# sentences = input()
# if 'суббота' in sentences or 'воскресенье' in sentences:
#     print("YES")
# else:
#     print("NO")


# 73 Будем считать email адрес корректным, если в нем есть символ собачки
# (@) и точки. Напишите программу проверяющую корректность email адреса.
#
# Формат входных данных
# На вход программе подаётся одна строка – email адрес.
#
# Формат выходных данных
# Программа должна вывести строку «YES», если email адрес является
# корректным и «NO» в ином случае.
#
# Примечание. Наличие символов @ и . недостаточно для корректности email
# адреса, однако их отсутствие гарантировано влечёт за собой неверный
# email.

# email = input()
# if "@" in email and "." in email:
#     print("YES")
# else:
#     print("NO")


# 74 Дано предложение и количество раз которое его надо повторить. Напишите программу,
# которая повторяет данное предложение нужное количество раз.
#
# Формат входных данных
# В первой строке записано текстовое предложение, во второй — количество повторений.
#
# Формат выходных данных
# Программа должна вывести указанное текстовое предложение нужное количество раз.
# Каждое повторение должно начинаться с новой строки.

# sentences = input()
# num = int(input())
# for _ in range(num):
#     print(sentences)


# 75 Напишите программу, которая использует ровно три цикла for для печати следующей
# последовательности символов:

# Формат входных данных
#
# Формат выходных данных
# Программа должна вывести указанную последовательность символов.

# for _ in range(6):
#     print("A" * 3)
# for _ in range(5):
#     print("B" * 4)
# print("E")
# for _ in range(9):
#     print("T" * 5)
# print("G")


# 76 На вход программе подается натуральное число n. Напишите программу, которая
# печатает звездный прямоугольник размерами  n × 19.
#
# Формат входных данных
# На вход программе подаётся натуральное число n ∈[1; 20] — высота звездного прямоугольника.
#
# Формат выходных данных
# Программа должна вывести звездный прямоугольник размерами n × 19.
#
# Подсказка. Для печати звездной линии используйте умножение строки на число.

# n = int(input())
# for _ in range(n):
#     print("*" * 19)


# 77 Напишите программу, которая считывает одну строку текста и выводит 10 строк,
# пронумерованных от 0 до 9, каждая с указанной строкой текста.
#
# Формат входных данных
# На вход программе подается одна строка текста.
#
# Формат выходных данных
# Программа должна вывести десять строк в соответствии с условием задачи.

# text = input()
# for i in range(10):
#     print(i, text)


# 78 На вход программе подается натуральное число n. Напишите программу, которая для
# каждого из чисел от 0 до n (включительно) выводит фразу: «Квадрат числа [число]
# равен [число]» (без кавычек).
#
# Формат входных данных
# На вход программе подается натуральное число n.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# n = int(input())
# for i in range(n + 1):
#     print(f"Квадрат числа", i, "равен", i ** 2)


# 79 На вход программе подается натуральное число n(n ≥ 2) – катет прямоугольного
# равнобедренного треугольника.
#
# Напишите программу, которая выводит звездный треугольник в соответствии с примером.
#
# Формат входных данных
# На вход программе подается одно натуральное число n(n ≥ 2).
#
# Формат выходных данных
# Программа должна вывести треугольник в соответствии с условием задачи.

# n = int(input())
# for i in range(n):
#     print("*" * (n - i))


# 80 На вход программе подается три натуральных числа  m, p, n:
#
# m : стартовое количество организмов;
# p : среднесуточное увеличение в %;
# n: количество дней для размножения.

# Напишите программу, которая предсказывает размер популяции организмов. Программа
# должна выводить размер популяции в каждый день, начиная с 1 и заканчивая n-м днем.
#
# Формат входных данных
# На вход программе подается три натуральных числа.
#
# Формат выходных данных
# Программа должна вывести текст в соответствии с условием задачи.

# m = int(input())
# p = int(input())
# n = int(input())
# for i in range(n):
#     print(i + 1, m)
#     m = m + p / 100 * m


# 81 Даны два целых числа m и n (m ≤ n). Напишите программу, которая выводит все
# числа от m до n включительно.
#
# Формат входных данных
# На вход программе подаются два целых числа  m и n, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести числа в соответствии с условием задачи.

# m = int(input())
# n = int(input())
# for _ in range(m, n + 1):
#     print(_)


# 81 Даны два целых числа m и n. Напишите программу, которая выводит все числа от m
# до n включительно в порядке возрастания, если m < n, или в порядке убывания в
# противном случае.
#
# Формат входных данных
# На вход программе подаются два целых числа m и n, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести числа в соответствии с условием задачи.

# m = int(input())
# n = int(input())
# if m < n:
#     for i in range(m, n + 1):
#         print(i)
# else:
#     for i in range(m, n - 1, -1):
#         print(i)


# 82 Даны два целых числа m и n (m > n). Напишите программу, которая выводит все
# нечетные числа от m до n включительно в порядке убывания.
#
# Формат входных данных
# На вход программе подаются два целых числа m и n, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести числа в соответствии с условием задачи.
#
# Примечание. Попробуйте решить задачу двумя способами: с использованием условного
# оператора if и без него.

# m = int(input())
# n = int(input())
#
# start = ((m - 1) // 2) * 2 + 1
#
# for i in range(start, n - 1, -2):
#     print(i)


# 83 Даны два натуральных числа m и n(m ≤ n). Напишите программу, которая выводит все
# числа от m до n включительно удовлетворяющие хотя бы одному из условий:
#
# число кратно 17;
# число оканчивается на 9;
# число кратно 3 и 5 одновременно.

# Формат входных данных
# На вход программе подаются два натуральных числа m и n(m ≤ n), каждое на отдельной
# строке.
#
# Формат выходных данных
# Программа должна вывести числа в соответствии с условием задачи.
#
# Примечание. Если чисел удовлетворяющих условию нет, выводить ничего не надо.

# m = int(input())
# n = int(input())
#
# for i in range(m, n + 1):
#     if i % 17 == 0 or i % 10 == 9 or i % 15 == 0:
#         print(i)


# 84 Дано натуральное число n. Напишите программу, которая выводит таблицу умножения на n.
#
# Формат входных данных
# На вход программе подается натуральное число.
#
# Формат выходных данных
# Программа должна вывести таблицу умножения на введенное число.
#
# Примечание. В качестве знака умножения используйте английскую букву x.

# n = int(input())
# for i in range(1, 11):
#     print(n, "x", i, "=", n * i)


# 85 На вход программе подаются два целых числа a и b (a ≤ b). Напишите программу,
# которая подсчитывает количество чисел в диапазоне от a до b включительно, куб
# которых оканчивается на 4 или 9.
#
# Формат входных данных
# На вход программе подаются два целых числа a и b (a ≤ b).
#
# Формат выходных данных
# Программа должна вывести одно целое число в соответствии с условием программы.
#
# Примечание. Куб числа a – это его третья степень a**3

# count = 0
# a, b = int(input()), int(input())
# for i in range(a, b + 1):
#     if i % 10 == 4 or i % 10 == 9:
#         count += 1
# print(count)


# 86 Сумма чисел. На вход программе подается натуральное число n, а затем n целых
# чисел, каждое на отдельной строке. Напишите программу, которая подсчитывает сумму
# введенных чисел.
#
# Формат входных данных
# На вход программе подаются натуральное число n, а затем n целых чисел, каждое на
# отдельной строке.
#
# Формат выходных данных
# Программа должна вывести сумму данных чисел.

# count = 0
# n = int(input())
# for i in range(n):
#     num_n = int(input())
#     count += num_n
# print(count)


# 87 На вход программе подается натуральное число n. Напишите программу, которая
# подсчитывает сумму тех чисел от 1 до n (включительно) квадрат которых оканчивается
# на 2, 5 или 8.
#
# Формат входных данных
# На вход программе подается натуральное число n.
#
# Формат выходных данных
# Программа должна вывести единственное число в соответствии с условием задачи.
#
# Примечание. Если таких чисел нет в указанном диапазоне, то следует вывести 0.

# count = 0
# n = int(input())
# for i in range(1, n + 1):
#     temp = i ** 2
#     if temp ** 2 % 10 == 2 or temp ** 2 % 10 == 5 or temp ** 2 % 10 == 8:
#         count += i
# print(count)


# 88 На вход программе подается натуральное число n. Напишите программу,
# которая вычисляет n!.
#
# Входные данные
# На вход программе подается натуральное число n, (n ≤ 12).
#
# Выходные данные
# Программа должна вывести единственное число в соответствии с условием задачи.
#
# Примечание. Факториалом натурального числа n, называется произведение всех
# натуральных чисел от 1 до n, то есть

# Через цикл while
# n = int(input())
# factorial = 1
# while n > 1:
#     factorial *= n
#     n -= 1
# print(factorial)

# Через цикл for
# n = int(input())
# factorial = 1
# for i in range(2, n + 1):
#     factorial *= i
# print(factorial)


# 89 Напишите программу, которая считывает 10 чисел и выводит произведение
# отличных от нуля чисел.
#
# Формат входных данных
# На вход программе подаются 10 целых чисел, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести произведение отличных от нуля чисел.
#
# Примечание. Гарантируется, что хотя бы одно из 10 чисел является ненулевым.

# total = 0
# for i in range(10):
#     num = int(input())
#     if num > 0:
#         total = num * total
# print(total)


# 90 На вход программе подается натуральное число n. Напишите программу,
# которая вычисляет сумму всех его делителей.
#
# Входные данные
# На вход программе подается натуральное число n.
#
# Выходные данные
# Программа должна вывести единственное число в соответствии с условием задачи.
#
# Примечание. Функция подсчета суммы всех делителей числа является очень важной
# в теории чисел.

# n = int(input())
# sum_n = 0
# for i in range(1, n + 1):
#     if n % i == 0:
#         sum_n += i
# print(sum_n)


# 91 На вход программе подается натуральное число n. Напишите программу
# вычисления знакочередующей суммы 1 − 2 + 3 − 4 + 5 − 6 + … + (− 1)**n + 1 n.
#
# Входные данные
# На вход программе подается натуральное число n.
#
# Выходные данные
# Программа должна вывести единственное число в соответствии с условием задачи.

# n = int(input())
# res = 0
# for i in range(1, n + 1):
#     if i % 2 == 0:
#         res -= i
#     if i % 2 != 0:
#         res += i
# print(res)


# 92 На вход программе подается натуральное число n, а затем n различных
# натуральных чисел, каждое на отдельной строке. Напишите программу, которая
# выводит наибольшее и второе наибольшее число последовательности.
#
# Формат входных данных
# На вход программе подаются натуральное число n ≥ 2, а затем n различных
# натуральных чисел, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести два наибольших числа, каждое на отдельной строке.

# n = int(input())
# max1 = max2 = 1
# for i in range(1, n + 1):
#     num_n = int(input())
#     if num_n > max1:
#         max2 = max1
#         max1 = num_n
#     elif num_n > max2:
#         max2 = num_n
# print(max1)
# print(max2)


# 93 Напишите программу, которая считывает последовательность из 10 целых чисел
# и определяет является ли каждое из них четным или нет.
#
# Формат входных данных
# На вход программе подаются 10 целых чисел, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести строку «YES», если все числа четные и «NO» в ином
# случае.

# flag = "YES"
# for _ in range(10):
#     nums = int(input())
#     if nums % 2 != 0:
#         flag = "NO"
# print(flag)


# 94 Напишите программу, которая считывает натуральное число n и выводит первые
# n чисел последовательности Фибоначчи.
#
# Формат входных данных
# На вход программе подается одно число n (n ≤ 100) – количество членов
# последовательности.
#
# Формат выходных данных
# Программа должна вывести члены последовательности Фибоначчи, отделенные
# символом пробела.
#
# Примечание. Последовательность Фибоначчи – это последовательность натуральных
# чисел, где каждое последующее число является суммой двух предыдущих:

# n = int(input())
# num_1 = 0
# num_2 = 1
# for _ in range(n):
#     num_2 = num_1 + num_2
#     nam_1 = num_2 - num_1
# print(nam_1, end=" ")


# 95 На вход программе подается последовательность слов, каждое слово на
# отдельной строке. Концом последовательности является слово «КОНЕЦ»
# (без кавычек). Напишите программу, которая выводит члены данной последовательности.
#
# Формат входных данных
# На вход программе подается последовательность слов, каждое слово на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести члены данной последовательности.

# word = input()
# while word != "КОНЕЦ":
#     print(word)
#     word = input()


# 96 На вход программе подается последовательность слов, каждое слово на
# отдельной строке. Концом последовательности является слово «КОНЕЦ» или
# «конец» (большими или маленькими буквами, без кавычек). Напишите программу,
# которая выводит члены данной последовательности.
#
# Формат входных данных
# На вход программе подается последовательность слов, каждое слово на отдельной
# строке.
#
# Формат выходных данных
# Программа должна вывести члены данной последовательности.

# word = input()
# while word != "КОНЕЦ" and word != "конец":
#     print(word)
#     word = input()


# 97 На вход программе подается последовательность слов, каждое слово на
# отдельной строке. Концом последовательности является одно из трех слов:
# «стоп», «хватит», «достаточно» (маленькими буквами, без кавычек). Напишите
# программу, которая выводит общее количество членов данной последовательности.
#
# Формат входных данных
# На вход программе подается последовательность слов, каждое слово на отдельной
# строке.
#
# Формат выходных данных
# Программа должна вывести общее количество членов данной последовательности.

# word = input()
# count = 0
# while word not in ("стоп", "хватит", "достаточно"):
#     count += 1
#     print(count)
# count = input()


# 98 На вход программе подается последовательность целых чисел делящихся на 7,
# каждое число на отдельной строке. Концом последовательности является любое
# число не делящееся на 7 (само это число в последовательность не входит, лишь
# символизируя её конец). Напишите программу, которая выводит члены данной
# последовательности.
#
# Формат входных данных
# На вход программе подается последовательность чисел, каждое число на отдельной
# строке.
#
# Формат выходных данных
# Программа должна вывести члены данной последовательности.

# num = int(input())
# while num % 7 == 0:
#     print(num)
#     num = int(input())


# 99 На вход программе подается последовательность целых чисел, каждое число на
# отдельной строке. Концом последовательности является любое отрицательное
# число. Напишите программу, которая выводит сумму всех членов данной последовательности.
#
# Формат входных данных
# На вход программе подается последовательность чисел, каждое число на отдельной
# строке.
#
# Формат выходных данных
# Программа должна вывести сумму членов данной последовательности.

# num = int(input())
# sum_n = 0
# while num >= 0:
#     sum_n += 1
#     num = int(input())
# print(sum_n)


# 100 На вход программе подается последовательность целых чисел от 1 до 5,
# характеризующее оценку ученика, каждое число на отдельной строке. Концом
# последовательности является любое отрицательное число, либо число большее
# 5. Напишите программу, которая выводит количество пятерок.
#
# Формат входных данных
# На вход программе подается последовательность чисел, каждое число на
# отдельной строке.
#
# Формат выходных данных
# Программа должна вывести количество пятерок.

# num = int(input())
# count = 0
# while 1 <= num <= 5:
#     if num == 5:
#         count += 1
#     num = int(input())
# print(count)


# 101 Всем известно, что ведьмак способен одолеть любых чудовищ, однако его услуги
# обойдутся недешево, к тому же ведьмак не принимает купюры, он принимает только
# чеканные монеты. В мире ведьмака существуют монеты с номиналами 1, 5, 10, 25.
# Напишите программу, которая определяет какое минимальное количество чеканных
# монет нужно заплатить ведьмаку.
#
# Формат входных данных
# На вход программе подается одно натуральное число, цена за услугу ведьмака.
#
# Формат выходных данных
# Программа должна вывести минимально возможное количество чеканных монет для
# оплаты.

# price = int(input())
# count = 0
# while price > 0:
#     if price >= 25:
#         price -= 25
#     elif price >= 10:
#         price -= 10
#     elif price >= 5:
#         price -= 5
#     else:
#         price -= 1
#     count += 1
# print(count)
















