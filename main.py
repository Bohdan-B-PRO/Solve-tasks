from math import *


# 1) На плоскости евклидово расстояние между двумя точками(x1; y1) и (x2; y2) определяется так
# ρ = √(x1 − x2)**2 + (y1 − y2)**2.
# Напишите программу определяющую евклидово расстояние между двумя точками, координаты которых заданы.
#
# Формат входных данных
# На вход программе подается четыре вещественных числа, каждое на отдельной строке – x1, y1, x2, y2.
#
# Формат выходных данных
# Программа должна вывести одно число – евклидово расстояние

# x1 = float(input())
# y1 = float(input())
# x2 = float(input())
# y2 = float(input())
# x = pow(x1 - x2, 2)
# y = pow(y1 - y2, 2)
#
# print(pow((x + y), 0.5))


# 2) Напишите программу определяющую площадь круга и длину окружности по заданному радиусу R.
#
# Формат входных данных
# На вход программе подается одно вещественное число
# R
#
# Формат выходных данных
# Программа должна вывести два числа – площадь круга и длину окружности радиуса
# R

# Примечание. Используйте константу math.pi.

# r = float(input())
# print(pi * r ** 2)
# print(2 * pi * r)


# 3) Напишите программу котороя выводит: среднее арифметическое, геометрическое, гармоническое и
# квадратичное чисел a и b

# Формат входных данных
# На вход программе подается два вещественных числа a и b, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести 4 числа – среднее арифметическое, геометрическое, гармоническое и квадратичное.

# a, b = float(input()), float(input())
# print((a + b) / 2)
# print(sqrt(a * b))
# print((2 * (a * b)) / (a + b))
# print(sqrt((a ** 2 + b ** 2) / 2))


# 4) Напишите программу, вычисляющую значение тригонометрического выражения sinx + cos x + tan**2x
# по заданному числу градусов x.
#
# Формат входных данных
# На вход программе подается одно вещественное число x измеряемое в градусах.
#
# Формат выходных данных
# Программа должна вывести одно число – значение тригонометрического выражения.

# x = radians(float(input()))
# print(sin(x) + cos(x) + tan(x) ** 2)


# 5) Напишите программу, вычисляющую значение  ⌈x⌉ + ⌊ x⌋ по заданному вещественному числу x.
#
# Формат входных данных
# На вход программе подается одно вещественное число x.
#
# Формат выходных данных
# Программа должна вывести одно число – значение указанного выражения.
#
# Примечание. ⌈x⌉ – потолок числа, ⌊x⌋ – пол числа.

# x = float(input())
# print(ceil(x) + floor(x))


# 6) Даны три вещественных числа  a, b, c. Напишите программу, которая находит вещественные корни
# квадратного уравнения  ax2 + bx + c = 0.

# Формат входных данных
# На вход программе подается три вещественных числа  a ≠ 0, b, c, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести вещественные корни уравнения если они существуют или текст «Нет корней» в
# противном случае.
#
# Примечание. Если уравнение имеет два корня, то следует вывести их в порядке возрастания.

# a = float(input())
# b = float(input())
# c = float(input())
# d = b ** 2 - 4 * a * c  # Ищем дискриминант
#
# if d < 0:
#     print("Нет корней")
# elif d == 0:  # если дискриминант ==0 (имеет один корень)
#     print(-b / (2 * a))
# elif d > 0:   # Если дискриминант >0 то два корня
#     x1 = (-b - d ** 0.5) / (2 * a)
#     x2 = (-b + d ** 0.5) / (2 * a)
#     print(min(x1, x2))
#     print(max(x1, x2))


# 7) Напишите программу, которая находит площадь указанного правильного многоугольника.
#
# Формат входных данных
# На вход программе подается два числа nn и aa, каждое на отдельной строке.
#
# Формат выходных данных
# Программа должна вывести вещественное число – площадь многоугольника.

# n, a = float(input()), float(input())
# ans = (n * pow(a, 2) / (4 * tan(pi / n)))
# print(ans)


# 8) На вход программе подается натуральное число n. Напишите программу, которая
# # вычисляет значение выражения
#
# count = 0  # Задаем стартовое значение переменной для скобок
# n = int(input())  # получаем число n
# for i in range(1, n + 1):  # Интервал начинаем с единицы, чтобы не делить на 0
#     count += (1 / i)  # Набиваем скобки суммами частных
# print(count - log(n))  # и дописываем формулу

























